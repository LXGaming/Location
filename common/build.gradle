plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "java"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "io.github.lxgaming"
archivesBaseName = "location-common"
version = version

configurations {
    provided {
        compile.extendsFrom(provided)
    }

    compileJava.dependsOn(":api:build")
    jar.enabled = false
    jar.dependsOn("shadowJar")
}

repositories {
    jcenter()
}

dependencies {
    shadow(project(path: ":api")) {
        transitive = false
    }
    provided(project(path: ":api"))
    provided("com.google.code.gson:gson:${gsonVersion}")
    provided("io.netty:netty-all:${nettyVersion}")
    provided("net.kyori:text-serializer-legacy:${textVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    provided("org.slf4j:slf4j-api:${slf4jVersion}")
}

jar {
    from {
        (configurations.compile - configurations.provided).findAll({
            it.isDirectory() || it.name.endsWith(".jar")
        }).collect({
            it.isDirectory() ? it : zipTree(it)
        })
    }
}

shadowJar {
    archiveClassifier.set(null)
    configurations = [project.configurations.shadow]
}

test {
    testLogging {
        exceptionFormat = "full"
        showStandardStreams = true
    }

    useJUnitPlatform()
}